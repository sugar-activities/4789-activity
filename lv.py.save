#!/usr/bin/python

# ZetCode PyGTK tutorial 
#
# This example shows a TreeView widget
# in a list view mode
#
# author: jan bodnar
# website: zetcode.com 
# last edited: February 2009


from gi.repository import Gtk

class Listview(): 
    def __init__(self, items, cols):
        
        vbox = Gtk.VBox()
        sw = Gtk.ScrolledWindow()
        #sw.set_shadow_type(gtk.SHADOW_ETCHED_IN)
        #sw.set_policy(gtk.POLICY_AUTOMATIC, gtk.POLICY_AUTOMATIC)
        
        vbox.pack_start(sw, True, True, 0)

        store = self.create_model(items, cols)

        treeView = Gtk.TreeView(store)
        treeView.connect("row-activated", self.on_activated)
        treeView.set_rules_hint(True)
        sw.add(treeView)

        self.create_columns(treeView)
        self.statusbar = Gtk.Statusbar()
        
        vbox.pack_start(self.statusbar, False, False, 0)
        self.vbox = vbox
        self.show_all()


    def create_model(self, items, cols = 1):
        if cols == 3:
            store = Gtk.ListStore(str, str, str)
            for item in items:
                store.append([item[0], item[1], item[2]])
        elif cols == 2:
            store = tk.ListStore(str, str)
            for item in items:
                store.append([item[0], item[1]])
        else:
            store = gtk.ListStore(str)
            for item in items:
                store.append([item[0]])

        return store


    def create_columns(self, treeView, names):
    
        for i in range(len(names)-1):
            rendererText = gtk.CellRendererText()
            column = gtk.TreeViewColumn(names[i], rendererText, text=i)
            column.set_sort_column_id(i)    
            treeView.append_column(column)
        


    def on_activated(self, widget, row, col):
        
        model = widget.get_model()
        text = model[row][0] + ", " + model[row][1] + ", " + model[row][2]
        self.statusbar.push(0, text)
